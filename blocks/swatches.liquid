

{%- liquid
  assign block_settings = block.settings
  assign product_has_swatches = false
  assign product_has_variants = false
  
  # Check if product has multiple variants (not just default variant)
  if closest.product.variants.size > 1 or closest.product.options_with_values.first.name != 'Title'
    assign product_has_variants = true
  endif
  
  for product_option in closest.product.options_with_values
    assign swatch_count = product_option.values | map: 'swatch' | compact | size

    if swatch_count > 0
      assign product_has_swatches = true
    endif
  endfor
  
  # DEBUG: Show block if product has variants for testing
  # This will help identify if swatches are not being recognized
  assign should_show = false
  if product_has_swatches
    assign should_show = true
  elsif product_has_variants
    # Show for all variants when using text or color/image mode
    # This allows the variant-swatches snippet to handle the display logic
    assign should_show = true
  endif
-%}

{% if should_show %}
  <product-swatches
    data-product-id="{{ closest.product.id }}"
    data-product-url="{{ closest.product.url }}"
    style="
      --overflow-list-alignment: {{ block_settings.product_swatches_alignment }};
      --overflow-list-alignment-mobile: {{ block_settings.product_swatches_alignment_mobile }};
      --product-swatches-alignment: {% if block_settings.product_swatches_alignment == 'flex-start' %}start{% elsif block_settings.product_swatches_alignment == 'flex-end' %}end{% else %}center{% endif %};
      --product-swatches-alignment-mobile: {% if block_settings.product_swatches_alignment_mobile == 'flex-start' %}start{% elsif block_settings.product_swatches_alignment_mobile == 'flex-end' %}end{% else %}center{% endif %};
      --product-swatches-padding-block-start: {{ block_settings.product_swatches_padding_top }}px;
      --product-swatches-padding-block-end: {{ block_settings.product_swatches_padding_bottom }}px;
      --product-swatches-padding-inline-start: {{ block_settings.product_swatches_padding_left }}px;
      --product-swatches-padding-inline-end: {{ block_settings.product_swatches_padding_right }}px;
    "
    {{ block.shopify_attributes }}
  >
    {% render 'variant-swatches', product_resource: closest.product, display_style: block_settings.swatch_display_style %}
  </product-swatches>
{% endif %}

{% # theme-check-disable %}
{% stylesheet %}
  product-swatches {
    width: 100%;
    display: flex;
    position: relative;
    overflow: hidden;
    gap: 0;
    flex-shrink: 0;
  }

  swatches-variant-picker-component {
    display: flex;
    width: 100%;
    flex-direction: row;
    justify-content: var(--product-swatches-alignment-mobile);

    @media (min-width: 750px) {
      justify-content: var(--product-swatches-alignment);
    }
  }

  swatches-variant-picker-component .variant-option--swatches {
    padding-block: calc(
        var(--product-swatches-padding-block-start) + var(--focus-outline-offset) + var(--focus-outline-width)
      )
      calc(var(--product-swatches-padding-block-end) + var(--focus-outline-offset) + var(--focus-outline-width));
    padding-inline: calc(
        var(--product-swatches-padding-inline-start) + var(--focus-outline-offset) + (1.5 * var(--focus-outline-width))
      )
      calc(var(--product-swatches-padding-inline-end) + var(--focus-outline-offset) + var(--focus-outline-width));
  }

  .variant-option--swatches {
    overflow-list::part(list) {
      gap: var(--gap-sm);
    }

    overflow-list[defer]::part(list) {
      flex-wrap: nowrap;
    }
  }

  .hidden-swatches__count {
    display: flex;
    align-self: center;
    align-items: center;
    justify-content: center;
    color: rgb(var(--color-foreground-rgb) / var(--opacity-40-60));
    background-color: transparent;
    padding: 0;
    border: 0;
    border-radius: 0;

    &::before {
      /* This doesn't work in Safari without the counter-reset. https://stackoverflow.com/a/40179718 */
      counter-reset: overflow-count var(--overflow-count);
      content: '+' counter(overflow-count);
      line-height: 1;
      cursor: pointer;
    }
  }

  .hidden-swatches__count:hover {
    color: var(--color-foreground-rgb);
  }

  /* ===== Color Swatches Mode (Round) ===== */
  .variant-option--swatch-color {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .variant-option--swatch-color .variant-option__swatch {
    position: relative;
  }

  .variant-option--swatch-color .swatch {
    width: 24px;
    height: 24px;
    border-radius: 4px;
    border: 1px solid rgb(var(--color-foreground-rgb) / 0.15);
    transition: all 0.2s ease;
    cursor: pointer;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
  }

  .variant-option--swatch-color .variant-option__button-label {
    display: block;
    cursor: pointer;
    position: relative;
  }

  /* 悬停效果 */
  .variant-option--swatch-color .variant-option__button-label:hover .swatch {
    transform: scale(1.1);
    border-color: rgb(var(--color-foreground-rgb) / 0.4);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  

  /* White 颜色的特殊处理 - 确保边框可见 */
  .variant-option--swatch-color .swatch[style*="255, 255, 255"] {
    border-color: rgb(var(--color-foreground-rgb) / 0.25);
  }

  /* 移动端优化 */
  @media (max-width: 749px) {
    .variant-option--swatch-color {
      gap: 8px;
    }
    
    .variant-option--swatch-color .swatch {
      width: 32px;
      height: 32px;
    }
  }

  /* ===== Image Swatches Mode (Square) ===== */
  .variant-option--swatch-image {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
  }

  .variant-option--swatch-image .swatch {
    width: 60px;
    height: 60px;
    border-radius: 6px;
    border: 2px solid rgb(var(--color-foreground-rgb) / 0.15);
    transition: all 0.2s ease;
    cursor: pointer;
    overflow: hidden;
  }

  .variant-option--swatch-image .variant-option__button-label {
    display: block;
    cursor: pointer;
  }

  .variant-option--swatch-image .variant-option__button-label:hover .swatch {
    border-color: rgb(var(--color-foreground-rgb) / 0.4);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
  }

  .variant-option--swatch-image .variant-option__button-label:has(input:checked) .swatch {
    border-color: var(--color-foreground);
    border-width: 3px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  @media (max-width: 749px) {
    .variant-option--swatch-image {
      gap: 10px;
    }
    
    .variant-option--swatch-image .swatch {
      width: 50px;
      height: 50px;
    }
  }

  /* ===== Text Buttons Mode ===== */
  .variant-option--swatch-text {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .variant-option--swatch-text .variant-option__button-label--text {
    padding: 10px 20px;
    border: 1.5px solid rgb(var(--color-foreground-rgb) / 0.2);
    border-radius: 6px;
    background-color: transparent;
    transition: all 0.2s ease;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 80px;
  }

  .variant-option--swatch-text .variant-option__button-label--text:hover {
    border-color: rgb(var(--color-foreground-rgb) / 0.5);
    background-color: rgb(var(--color-foreground-rgb) / 0.05);
    transform: translateY(-1px);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
  }

  .variant-option--swatch-text .variant-option__button-label--text:has(input:checked) {
    border-color: var(--color-foreground);
    border-width: 2px;
    background-color: var(--color-foreground);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    transform: translateY(-1px);
  }

  .variant-option--swatch-text .variant-option__text {
    display: block;
    font-size: 14px;
    font-weight: 500;
    line-height: 1.2;
    white-space: nowrap;
    color: inherit;
    letter-spacing: 0.02em;
  }

  .variant-option--swatch-text .variant-option__button-label--text:has(input:checked) .variant-option__text {
    color: var(--color-background);
    font-weight: 600;
  }

  @media (max-width: 749px) {
    .variant-option--swatch-text {
      gap: 6px;
    }
    
    .variant-option--swatch-text .variant-option__button-label--text {
      padding: 8px 16px;
      min-width: 70px;
      font-size: 13px;
    }
  }

  /* ===== 通用优化 ===== */
  /* 隐藏 radio input */
  .variant-option--swatches input[type="radio"] {
    position: absolute;
    opacity: 0;
    pointer-events: none;
  }

  /* 禁用状态 */
  .variant-option--swatches .variant-option__button-label:has(input:disabled) {
    opacity: 0.4;
    cursor: not-allowed;
  }

  .variant-option--swatches .variant-option__button-label:has(input:disabled):hover {
    transform: none;
  }

  /* 无障碍聚焦样式 */
  .variant-option--swatches input:focus-visible ~ .swatch,
  .variant-option--swatches input:focus-visible ~ .variant-option__text {
    outline: 2px solid var(--color-foreground);
    outline-offset: 2px;
  }
{% endstylesheet %}

{% schema %}
{
  "name": "t:names.swatches",
  "tag": null,
  "settings": [
    {
      "type": "paragraph",
      "content": "t:content.resource_reference_product_swatches"
    },
    {
      "type": "select",
      "id": "swatch_display_style",
      "label": "Display style",
      "options": [
        {
          "value": "color",
          "label": "Color swatches (round)"
        },
        {
          "value": "image",
          "label": "Background images (square)"
        },
        {
          "value": "text",
          "label": "Text buttons"
        }
      ],
      "default": "color",
      "info": "Choose how to display variant options"
    },
    {
      "type": "select",
      "id": "product_swatches_alignment",
      "label": "t:settings.alignment",
      "options": [
        {
          "value": "flex-start",
          "label": "t:options.left"
        },
        {
          "value": "center",
          "label": "t:options.center"
        },
        {
          "value": "flex-end",
          "label": "t:options.right"
        }
      ],
      "default": "flex-start"
    },
    {
      "type": "select",
      "id": "product_swatches_alignment_mobile",
      "label": "t:settings.alignment_mobile",
      "options": [
        {
          "value": "flex-start",
          "label": "t:options.left"
        },
        {
          "value": "center",
          "label": "t:options.center"
        },
        {
          "value": "flex-end",
          "label": "t:options.right"
        }
      ],
      "default": "flex-start"
    },
    {
      "type": "header",
      "content": "t:content.padding",
      "visible_if": "{{ block.settings.hide_padding == false }}"
    },
    {
      "type": "checkbox",
      "id": "hide_padding",
      "label": "t:settings.hide_padding",
      "default": false,
      "visible_if": "{{ false }}"
    },
    {
      "type": "range",
      "id": "product_swatches_padding_top",
      "label": "t:settings.top",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "default": 4,
      "visible_if": "{{ block.settings.hide_padding == false }}"
    },
    {
      "type": "range",
      "id": "product_swatches_padding_bottom",
      "label": "t:settings.bottom",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "default": 0,
      "visible_if": "{{ block.settings.hide_padding == false }}"
    },
    {
      "type": "range",
      "id": "product_swatches_padding_left",
      "label": "t:settings.left",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "default": 0,
      "visible_if": "{{ block.settings.hide_padding == false }}"
    },
    {
      "type": "range",
      "id": "product_swatches_padding_right",
      "label": "t:settings.right",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "default": 0,
      "visible_if": "{{ block.settings.hide_padding == false }}"
    }
  ],
  "presets": [
    {
      "name": "t:names.swatches",
      "category": "t:categories.product"
    }
  ]
}
{% endschema %}
{% # theme-check-enable %}
